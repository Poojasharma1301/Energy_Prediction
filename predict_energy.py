# -*- coding: utf-8 -*-
"""Predict Energy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c2rtnQfKOPe48LNdU0IGt74zvb0wzSZ-
"""

import pandas as pd
import numpy as np

data=pd.read_csv('/content/Final_data.csv')

data.head()

data = data.drop('time_consumed', axis=1)

data.head()

from sklearn.model_selection import train_test_split
# select the features and target
X = data[['Voltage', 'Current', 'power']]
y = data['energy']

# split the data into a training set and a test set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# print the shapes of the resulting arrays
print("X_train shape:", X_train.shape)
print("X_test shape:", X_test.shape)
print("y_train shape:", y_train.shape)
print("y_test shape:", y_test.shape)

from sklearn.linear_model import LinearRegression
# create a linear regression model
model = LinearRegression()

# fit the model to the training data
model.fit(X_train, y_train)

# make predictions on the test data
y_pred = model.predict(X_test)

# print the predicted values
print(y_pred)

# prompt the user to enter the input values
Voltage = float(input("Enter value of voltage: "))
Current = float(input("Enter value of current: "))
power=Voltage*Current
# define the power factor and time values
power_factor = 0.8
time = 2  # in hours (h)

# create a DataFrame with the input values
input_data = pd.DataFrame({
    'Voltage': [Voltage],
    'Current': [Current],
    'power':[power],
})

# make a prediction using the input data
prediction = model.predict(input_data)
# print the prediction
print("Prediction:Consumed Energy", prediction[0])

